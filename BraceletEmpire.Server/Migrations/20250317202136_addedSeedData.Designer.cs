// <auto-generated />
using System;
using BraceletEmpire.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BraceletEmpire.Server.Migrations
{
    [DbContext(typeof(BraceletEmpireServerContext))]
    [Migration("20250317202136_addedSeedData")]
    partial class addedSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BraceletEmpire.Server.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("ItemType").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BraceletEmpire.Server.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BraceletEmpire.Server.Models.Bracelet", b =>
                {
                    b.HasBaseType("BraceletEmpire.Server.Models.Item");

                    b.Property<string>("BraceletSpecificAttribute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bracelet");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ImageUrl = "https://placehold.co/600x400/pink/white?text=Beaded+Bracelet",
                            ItemDescription = "Handmade bracelet with colorful beads, perfect for summer!",
                            ItemName = "Colorful Beaded Bracelet",
                            ItemPrice = 12.99m,
                            ItemType = "Bracelet",
                            Quantity = 10,
                            BraceletSpecificAttribute = "Glass beads"
                        },
                        new
                        {
                            ItemId = 2,
                            ImageUrl = "https://placehold.co/600x400/purple/white?text=Friendship+Bracelet",
                            ItemDescription = "Handwoven friendship bracelet made with embroidery thread",
                            ItemName = "Friendship Bracelet",
                            ItemPrice = 8.99m,
                            ItemType = "Bracelet",
                            Quantity = 15,
                            BraceletSpecificAttribute = "Cotton thread"
                        });
                });

            modelBuilder.Entity("BraceletEmpire.Server.Models.Keychain", b =>
                {
                    b.HasBaseType("BraceletEmpire.Server.Models.Item");

                    b.Property<string>("KeychainSpecificAttribute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Keychain");

                    b.HasData(
                        new
                        {
                            ItemId = 3,
                            ImageUrl = "https://placehold.co/600x400/purple/white?text=Name+Keychain",
                            ItemDescription = "Personalized keychain with your name in colorful beads",
                            ItemName = "Custom Name Keychain",
                            ItemPrice = 9.99m,
                            ItemType = "Keychain",
                            Quantity = 8,
                            KeychainSpecificAttribute = "Acrylic beads"
                        },
                        new
                        {
                            ItemId = 4,
                            ImageUrl = "https://placehold.co/600x400/blue/white?text=Resin+Flower",
                            ItemDescription = "Beautiful keychain with real flowers preserved in resin",
                            ItemName = "Resin Flower Keychain",
                            ItemPrice = 14.99m,
                            ItemType = "Keychain",
                            Quantity = 5,
                            KeychainSpecificAttribute = "Epoxy resin"
                        });
                });

            modelBuilder.Entity("BraceletEmpire.Server.Models.Item", b =>
                {
                    b.HasOne("BraceletEmpire.Server.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BraceletEmpire.Server.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
